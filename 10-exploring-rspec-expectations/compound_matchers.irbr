>> require 'rspec/expectations'
=> true
>> include RSpec::Matchers
=> Object

>> start_with_a_and_end_with_z = start_with('a').and end_with('z')
=> #<RSpec::Matchers::BuiltIn::Compound::And:0x007fb37b204b90               ↩
@matcher_1=#<RSpec::Matchers::BuiltIn::StartWith:0x007fb37b214cc0           ↩
@actual_does_not_have_ordered_elements=false, @expected="a">,               ↩
@matcher_2=#<RSpec::Matchers::BuiltIn::EndWith:0x007fb37b214b08             ↩
@actual_does_not_have_ordered_elements=false, @expected="z">>

>> expect(['a', 'z']).to start_with_a_and_end_with_z
=> true
>> expect(['a', 'y']).to start_with_a_and_end_with_z
RSpec::Expectations::ExpectationNotMetError: expected ["a", "y"] to end with↩
"z"
    <literal:elide> backtrace truncated </literal:elide>
>> expect(['b', 'y']).to start_with_a_and_end_with_z
RSpec::Expectations::ExpectationNotMetError:    expected ["b", "y"] to start↩
with "a"

...and:

   expected ["b", "y"] to end with "z"
    <literal:elide> backtrace truncated </literal:elide>
